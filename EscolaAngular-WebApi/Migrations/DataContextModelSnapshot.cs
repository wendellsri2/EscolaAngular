// <auto-generated />
using System;
using EscolaAngular_WebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EscolaAngular_WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("EscolaAngular_WebApi.Models.Aluno", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DtNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DtNascimento = new DateTime(1990, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Endereco = "033322523-13",
                            Name = "Wendell Silva",
                            Telefone = "61999581206"
                        },
                        new
                        {
                            Id = 2,
                            DtNascimento = new DateTime(1970, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Endereco = "033322523-11",
                            Name = "Vanessa Silva Sobrado",
                            Telefone = "61999581223"
                        },
                        new
                        {
                            Id = 3,
                            DtNascimento = new DateTime(1988, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Endereco = "032322523-14",
                            Name = "Jeferson de Oliveira",
                            Telefone = "61999581220"
                        },
                        new
                        {
                            Id = 4,
                            DtNascimento = new DateTime(1990, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Endereco = "033322523-20",
                            Name = "Jessica Andrade",
                            Telefone = "61999581215"
                        },
                        new
                        {
                            Id = 5,
                            DtNascimento = new DateTime(2000, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Endereco = "033322523-21",
                            Name = "Jhonatan Botafogo",
                            Telefone = "61999581110"
                        },
                        new
                        {
                            Id = 6,
                            DtNascimento = new DateTime(2000, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Endereco = "033322522-15",
                            Name = "Ronaldo Gibraltar",
                            Telefone = "61999581209"
                        },
                        new
                        {
                            Id = 7,
                            DtNascimento = new DateTime(2000, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Endereco = "033322522-00",
                            Name = "Gilberto Pereira",
                            Telefone = "61999581201"
                        });
                });

            modelBuilder.Entity("EscolaAngular_WebApi.Models.AlunoDisciplina", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlunoId", "DisciplinaId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("AlunosDisciplinas");

                    b.HasData(
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 2
                        },
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 4
                        },
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 5
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 1
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 2
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 5
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 1
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 2
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 3
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 1
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 4
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 5
                        },
                        new
                        {
                            AlunoId = 5,
                            DisciplinaId = 4
                        },
                        new
                        {
                            AlunoId = 5,
                            DisciplinaId = 5
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 1
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 2
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 3
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 4
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 1
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 2
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 3
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 4
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 5
                        });
                });

            modelBuilder.Entity("EscolaAngular_WebApi.Models.Disciplina", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Disciplinas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Português",
                            ProfessorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Matemática",
                            ProfessorId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Historia",
                            ProfessorId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Inglês",
                            ProfessorId = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Fisica",
                            ProfessorId = 5
                        });
                });

            modelBuilder.Entity("EscolaAngular_WebApi.Models.Professor", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DtNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Professores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DtNascimento = new DateTime(2000, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Endereco = "Rua 24 Brasília",
                            Nome = "Gregorio de Matos",
                            Telefone = "61929581206"
                        },
                        new
                        {
                            Id = 2,
                            DtNascimento = new DateTime(2000, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Endereco = "Rua 02 Brasília",
                            Nome = "Fabiola Cavalcante",
                            Telefone = "61999500223"
                        },
                        new
                        {
                            Id = 3,
                            DtNascimento = new DateTime(2000, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Endereco = "Rua 12 Brasília",
                            Nome = "Ronaldo Machado",
                            Telefone = "61999581000"
                        },
                        new
                        {
                            Id = 4,
                            DtNascimento = new DateTime(2000, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Endereco = "Rua 20 Brasília",
                            Nome = "Fernanda Silva",
                            Telefone = "61999581215"
                        },
                        new
                        {
                            Id = 5,
                            DtNascimento = new DateTime(2000, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Endereco = "Rua 27 Brasília",
                            Nome = "Janice Pereira",
                            Telefone = "61999581139"
                        });
                });

            modelBuilder.Entity("EscolaAngular_WebApi.Models.AlunoDisciplina", b =>
                {
                    b.HasOne("EscolaAngular_WebApi.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EscolaAngular_WebApi.Models.Disciplina", "Disciplina")
                        .WithMany()
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("EscolaAngular_WebApi.Models.Disciplina", b =>
                {
                    b.HasOne("EscolaAngular_WebApi.Models.Professor", "Professor")
                        .WithMany("Disciplina")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("EscolaAngular_WebApi.Models.Professor", b =>
                {
                    b.Navigation("Disciplina");
                });
#pragma warning restore 612, 618
        }
    }
}
